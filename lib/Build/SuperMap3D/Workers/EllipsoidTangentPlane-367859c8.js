define(["exports","./Cartographic-cd471038","./Check-5cf5e906","./when-f4cab1fd","./buildModuleUrl-26ebe74f","./Cartesian2-94d75d5d","./Cartesian4-d3cdbab5","./IntersectionTests-74b7d43a","./FeatureDetection-fb5abd84","./Plane-07f90ae1","./GeometryAttribute-acc7fc74"],(function(e,t,n,i,o,r,a,s,c,m,u){"use strict";function l(e,n,o){this.minimum=t.o.clone(i.u(e,t.o.ZERO)),this.maximum=t.o.clone(i.u(n,t.o.ZERO)),o=i.e(o)?t.o.clone(o):t.o.midpoint(this.minimum,this.maximum,new t.o),this.center=o}l.fromPoints=function(e,n){if(i.e(n)||(n=new l),!i.e(e)||0===e.length)return n.minimum=t.o.clone(t.o.ZERO,n.minimum),n.maximum=t.o.clone(t.o.ZERO,n.maximum),n.center=t.o.clone(t.o.ZERO,n.center),n;for(var o=e[0].x,r=e[0].y,a=e[0].z,s=e[0].x,c=e[0].y,m=e[0].z,u=e.length,f=1;f<u;f++){var d=e[f],h=d.x,p=d.y,x=d.z;o=Math.min(h,o),s=Math.max(h,s),r=Math.min(p,r),c=Math.max(p,c),a=Math.min(x,a),m=Math.max(x,m)}var y=n.minimum;y.x=o,y.y=r,y.z=a;var g=n.maximum;return g.x=s,g.y=c,g.z=m,n.center=t.o.midpoint(y,g,n.center),n},l.clone=function(e,n){if(i.e(e))return i.e(n)?(n.minimum=t.o.clone(e.minimum,n.minimum),n.maximum=t.o.clone(e.maximum,n.maximum),n.center=t.o.clone(e.center,n.center),n):new l(e.minimum,e.maximum,e.center)},l.equals=function(e,n){return e===n||i.e(e)&&i.e(n)&&t.o.equals(e.center,n.center)&&t.o.equals(e.minimum,n.minimum)&&t.o.equals(e.maximum,n.maximum)};var f=new t.o;l.intersectPlane=function(e,i){n.o.defined("box",e),n.o.defined("plane",i),f=t.o.subtract(e.maximum,e.minimum,f);var r=t.o.multiplyByScalar(f,.5,f),a=i.normal,s=r.x*Math.abs(a.x)+r.y*Math.abs(a.y)+r.z*Math.abs(a.z),c=t.o.dot(e.center,a)+i.distance;return c-s>0?o.S.INSIDE:c+s<0?o.S.OUTSIDE:o.S.INTERSECTING},l.prototype.clone=function(e){return l.clone(this,e)},l.prototype.intersectPlane=function(e){return l.intersectPlane(this,e)},l.prototype.equals=function(e){return l.equals(this,e)};var d=new a.e;function h(e,o){if(n.o.defined("origin",e),e=(o=i.u(o,r.t.WGS84)).scaleToGeodeticSurface(e),!i.e(e))throw new n.t("origin must not be at the center of the ellipsoid.");var a=u.m.eastNorthUpToFixedFrame(e,o);this._ellipsoid=o,this._origin=e,this._xAxis=t.o.fromCartesian4(c.p.getColumn(a,0,d)),this._yAxis=t.o.fromCartesian4(c.p.getColumn(a,1,d));var s=t.o.fromCartesian4(c.p.getColumn(a,2,d));this._plane=m.o.fromPointNormal(e,s)}Object.defineProperties(h.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},origin:{get:function(){return this._origin}},plane:{get:function(){return this._plane}},xAxis:{get:function(){return this._xAxis}},yAxis:{get:function(){return this._yAxis}},zAxis:{get:function(){return this._plane.normal}}});var p=new l;h.fromPoints=function(e,t){return n.o.defined("cartesians",e),new h(l.fromPoints(e,p).center,t)};var x=new s.f,y=new t.o;h.prototype.projectPointOntoPlane=function(e,o){n.o.defined("cartesian",e);var a=x;a.origin=e,t.o.normalize(e,a.direction);var c=s.g.rayPlane(a,this._plane,y);if(i.e(c)||(t.o.negate(a.direction,a.direction),c=s.g.rayPlane(a,this._plane,y)),i.e(c)){var m=t.o.subtract(c,this._origin,c),u=t.o.dot(this._xAxis,m),l=t.o.dot(this._yAxis,m);return i.e(o)?(o.x=u,o.y=l,o):new r.o(u,l)}},h.prototype.projectPointsOntoPlane=function(e,t){n.o.defined("cartesians",e),i.e(t)||(t=[]);for(var o=0,r=e.length,a=0;a<r;a++){var s=this.projectPointOntoPlane(e[a],t[o]);i.e(s)&&(t[o]=s,o++)}return t.length=o,t},h.prototype.projectPointToNearestOnPlane=function(e,o){n.o.defined("cartesian",e),i.e(o)||(o=new r.o);var a=x;a.origin=e,t.o.clone(this._plane.normal,a.direction);var c=s.g.rayPlane(a,this._plane,y);i.e(c)||(t.o.negate(a.direction,a.direction),c=s.g.rayPlane(a,this._plane,y));var m=t.o.subtract(c,this._origin,c),u=t.o.dot(this._xAxis,m),l=t.o.dot(this._yAxis,m);return o.x=u,o.y=l,o},h.prototype.projectPointsToNearestOnPlane=function(e,t){n.o.defined("cartesians",e),i.e(t)||(t=[]);var o=e.length;t.length=o;for(var r=0;r<o;r++)t[r]=this.projectPointToNearestOnPlane(e[r],t[r]);return t};var g=new t.o;h.prototype.projectPointOntoEllipsoid=function(e,o){n.o.defined("cartesian",e),i.e(o)||(o=new t.o);var r=this._ellipsoid,a=this._origin,s=this._xAxis,c=this._yAxis,m=g;return t.o.multiplyByScalar(s,e.x,m),o=t.o.add(a,m,o),t.o.multiplyByScalar(c,e.y,m),t.o.add(o,m,o),r.scaleToGeocentricSurface(o,o),o},h.prototype.projectPointsOntoEllipsoid=function(e,t){n.o.defined("cartesians",e);var o=e.length;i.e(t)?t.length=o:t=new Array(o);for(var r=0;r<o;++r)t[r]=this.projectPointOntoEllipsoid(e[r],t[r]);return t},e.e=l,e.f=h}));
